on:
  workflow_dispatch:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read

jobs:
  deployment:
    name: Frontend Deployment
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['22.x']
        os: [ubuntu-latest]

    steps:
    - name: Configure AWS Credentials region audience
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-region: ${{vars.AWS_REGION}}
        role-to-assume: ${{vars.AWS_ROLE_ARN_TO_ASSUME}}

    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node_version }}

    - name: Install
      run: |
        npm ci --silent

    - name: Build
      run: |
        npm run build
    
    - name: Send build to S3
      run: |
        aws s3 sync ./out s3://${{vars.AWS_S3_BUCKET_NAME}} --delete --debug
    
    - name: Invalidate CloudFront Cache
      run: |
        TAG_NAME="Name"
        TAG_VALUE="github-actions-cloudfront-s3-pipeline"

        found=0

        for id in $(aws cloudfront list-distributions --query "DistributionList.Items[].Id" --output text); do
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ARN="arn:aws:cloudfront::${ACCOUNT_ID}:distribution/${id}"

          name_tag=$(aws cloudfront list-tags-for-resource --resource $ARN \
            --query "Tags.Items[?Key=='${TAG_NAME}'].Value" --output text)

          if [[ "$name_tag" == "$TAG_VALUE" ]]; then
            echo "Found distribution ID: $id"
            aws cloudfront create-invalidation --distribution-id $id --paths "/*"
            found=1
            break
          fi
        done

        if [[ $found -eq 1 ]]; then
          echo "Sucesso: distribuição com a tag encontrada e invalidação criada."
          exit 0
        else
          echo "Falha: nenhuma distribuição com a tag '$TAG_VALUE' encontrada."
          exit 1
        fi
